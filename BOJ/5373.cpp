#include <bits/stdc++.h>

using namespace std;

class cube
{
public:
    char s[6][10] = {"wwwwwwwww", "ggggggggg", "rrrrrrrrr", "bbbbbbbbb", "yyyyyyyyy", "ooooooooo"};
    void t_l(char* p1, char* p2, char* p3, char* p4, char* p5, char* p6, char* p7, char* p8, char* p9, char* p10, char* p11, char* p12, char* p13, char* p14, char* p15, char* p16, char* p17, char* p18, char* p19, char* p20){char tmp = *p1; *p1 = *p3; *p3 = *p5; *p5 = *p7; *p7 = tmp; tmp = *p2; *p2 = *p4; *p4 = *p6; *p6 = *p8; *p8 = tmp; tmp = *p9; *p9 = *p12; *p12 = *p15; *p15 = *p18; *p18 = tmp; tmp = *p10; *p10 = *p13; *p13 = *p16; *p16 = *p19; *p19 = tmp; tmp = *p11; *p11 = *p14; *p14 = *p17; *p17 = *p20; *p20 = tmp;}
    void t_r(char* p1, char* p2, char* p3, char* p4, char* p5, char* p6, char* p7, char* p8, char* p9, char* p10, char* p11, char* p12, char* p13, char* p14, char* p15, char* p16, char* p17, char* p18, char* p19, char* p20){char tmp = *p7; *p7 = *p5; *p5 = *p3; *p3 = *p1; *p1 = tmp; tmp = *p8; *p8 = *p6; *p6 = *p4; *p4 = *p2; *p2 = tmp; tmp = *p18; *p18 = *p15; *p15 = *p12; *p12 = *p9; *p9 = tmp; tmp = *p19; *p19 = *p16; *p16 = *p13; *p13 = *p10; *p10 = tmp; tmp = *p20; *p20 = *p17; *p17 = *p14; *p14 = *p11; *p11 = tmp;}
    void f_l(){t_l(&s[2][0], &s[2][1], &s[2][2], &s[2][5], &s[2][8], &s[2][7], &s[2][6], &s[2][3], &s[0][6], &s[0][7], &s[0][8], &s[3][0], &s[3][3], &s[3][6], &s[4][2], &s[4][1], &s[4][0], &s[1][8], &s[1][5], &s[1][2]);}
    void f_r(){t_r(&s[2][0], &s[2][1], &s[2][2], &s[2][5], &s[2][8], &s[2][7], &s[2][6], &s[2][3], &s[0][6], &s[0][7], &s[0][8], &s[3][0], &s[3][3], &s[3][6], &s[4][2], &s[4][1], &s[4][0], &s[1][8], &s[1][5], &s[1][2]);}
    void b_l(){t_l(&s[5][0], &s[5][1], &s[5][2], &s[5][5], &s[5][8], &s[5][7], &s[5][6], &s[5][3], &s[4][6], &s[4][7], &s[4][8], &s[3][8], &s[3][5], &s[3][2], &s[0][2], &s[0][1], &s[0][0], &s[1][0], &s[1][3], &s[1][6]);}
    void b_r(){t_r(&s[5][0], &s[5][1], &s[5][2], &s[5][5], &s[5][8], &s[5][7], &s[5][6], &s[5][3], &s[4][6], &s[4][7], &s[4][8], &s[3][8], &s[3][5], &s[3][2], &s[0][2], &s[0][1], &s[0][0], &s[1][0], &s[1][3], &s[1][6]);}
    void u_l(){t_l(&s[0][0], &s[0][1], &s[0][2], &s[0][5], &s[0][8], &s[0][7], &s[0][6], &s[0][3], &s[5][6], &s[5][7], &s[5][8], &s[3][2], &s[3][1], &s[3][0], &s[2][2], &s[2][1], &s[2][0], &s[1][2], &s[1][1], &s[1][0]);}
    void u_r(){t_r(&s[0][0], &s[0][1], &s[0][2], &s[0][5], &s[0][8], &s[0][7], &s[0][6], &s[0][3], &s[5][6], &s[5][7], &s[5][8], &s[3][2], &s[3][1], &s[3][0], &s[2][2], &s[2][1], &s[2][0], &s[1][2], &s[1][1], &s[1][0]);}
    void d_l(){t_l(&s[4][0], &s[4][1], &s[4][2], &s[4][5], &s[4][8], &s[4][7], &s[4][6], &s[4][3], &s[2][6], &s[2][7], &s[2][8], &s[3][6], &s[3][7], &s[3][8], &s[5][2], &s[5][1], &s[5][0], &s[1][6], &s[1][7], &s[1][8]);}
    void d_r(){t_r(&s[4][0], &s[4][1], &s[4][2], &s[4][5], &s[4][8], &s[4][7], &s[4][6], &s[4][3], &s[2][6], &s[2][7], &s[2][8], &s[3][6], &s[3][7], &s[3][8], &s[5][2], &s[5][1], &s[5][0], &s[1][6], &s[1][7], &s[1][8]);}
    void l_l(){t_l(&s[1][0], &s[1][1], &s[1][2], &s[1][5], &s[1][8], &s[1][7], &s[1][6], &s[1][3], &s[0][0], &s[0][3], &s[0][6], &s[2][0], &s[2][3], &s[2][6], &s[4][0], &s[4][3], &s[4][6], &s[5][0], &s[5][3], &s[5][6]);}
    void l_r(){t_r(&s[1][0], &s[1][1], &s[1][2], &s[1][5], &s[1][8], &s[1][7], &s[1][6], &s[1][3], &s[0][0], &s[0][3], &s[0][6], &s[2][0], &s[2][3], &s[2][6], &s[4][0], &s[4][3], &s[4][6], &s[5][0], &s[5][3], &s[5][6]);}
    void r_l(){t_l(&s[3][0], &s[3][1], &s[3][2], &s[3][5], &s[3][8], &s[3][7], &s[3][6], &s[3][3], &s[0][8], &s[0][5], &s[0][2], &s[5][8], &s[5][5], &s[5][2], &s[4][8], &s[4][5], &s[4][2], &s[2][8], &s[2][5], &s[2][2]);}
    void r_r(){t_r(&s[3][0], &s[3][1], &s[3][2], &s[3][5], &s[3][8], &s[3][7], &s[3][6], &s[3][3], &s[0][8], &s[0][5], &s[0][2], &s[5][8], &s[5][5], &s[5][2], &s[4][8], &s[4][5], &s[4][2], &s[2][8], &s[2][5], &s[2][2]);}
};

int main()
{
    int t;
    scanf("%d", &t);
    while(t--)
    {
        int n;
        scanf(" %d", &n);
        cube c = cube();
        while(n--)
        {
            string tmp;
            cin >> tmp;
            if(tmp=="F-") c.f_l();
            else if(tmp=="F+") c.f_r();
            else if(tmp=="B-") c.b_l();
            else if(tmp=="B+") c.b_r();
            else if(tmp=="U-") c.u_l();
            else if(tmp=="U+") c.u_r();
            else if(tmp=="D-") c.d_l();
            else if(tmp=="D+") c.d_r();
            else if(tmp=="L-") c.l_l();
            else if(tmp=="L+") c.l_r();
            else if(tmp=="R-") c.r_l();
            else if(tmp=="R+") c.r_r();
        }
        for(int i=0;i<3;i++)
        {
            for(int j=0;j<3;j++)
                printf("%c", c.s[0][i*3+j]);
            printf("\n");
        }
    }

    return 0;
}